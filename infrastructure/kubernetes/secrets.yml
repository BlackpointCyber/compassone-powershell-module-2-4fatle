apiVersion: v1
kind: Secret
metadata:
  name: pscompassone-secrets
  namespace: pscompassone
  labels:
    app: pscompassone
    component: secrets
    security-tier: high
    backup-required: "true"
    rotation-enabled: "true"
  annotations:
    rotation.pscompassone.io/last-rotated: ""
    rotation.pscompassone.io/next-rotation: ""
    backup.pscompassone.io/schedule: "daily"
    security.pscompassone.io/encryption: "aes256"
    audit.pscompassone.io/enabled: "true"
type: Opaque
data:
  # CompassOne API authentication key
  # Rotation: 90 days
  # Minimum length: 32 characters (base64 encoded)
  api-key: ${API_KEY}

  # PowerShell SecretStore encryption key
  # Rotation: 180 days
  # Minimum length: 64 characters (base64 encoded)
  secret-store-key: ${SECRET_STORE_KEY}

  # TLS certificate for API communication
  # Rotation: 365 days
  # Requirements: X.509 with 2048-bit minimum
  tls.crt: ${TLS_CERTIFICATE}

  # TLS private key for API communication
  # Rotation: 365 days
  # Requirements: Must match certificate
  tls.key: ${TLS_PRIVATE_KEY}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pscompassone-secrets-reader
  namespace: pscompassone
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["pscompassone-secrets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pscompassone-secrets-reader-binding
  namespace: pscompassone
subjects:
- kind: ServiceAccount
  name: pscompassone-sa
  namespace: pscompassone
roleRef:
  kind: Role
  name: pscompassone-secrets-reader
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: policy/v1
kind: PodSecurityPolicy
metadata:
  name: pscompassone-restricted
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'secret'
    - 'emptyDir'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65534
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65534
  readOnlyRootFilesystem: true